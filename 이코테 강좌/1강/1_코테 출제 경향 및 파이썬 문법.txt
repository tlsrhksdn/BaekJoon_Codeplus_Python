요구사항에 따른 알고리즘 설계

시간제한이 1초인 문제에서

N의 범위가 500: 시간 복잡도가 O(N**3)
N의 범위가 2000: 시간 복잡도가 O(N**2)
N의 범위가 100,000: 시간 복잡도가 O(NlogN)
N의 범위가 10,000,000: 시간 복잡도가 O(N)

알고리즘 문제 해결 과정
1. 지문 읽기 및 컴퓨터적 사고
2. 요구사항(복잡도) 분석
3. 문제 해결을 위한 아이디어 찾기
4. 소스코드 설계 및 코딩

빠르게 입력받기

sys 라이브러리에 정의되어 있는 sys.stdin.readline() 메서드 이용
엔터가 줄 바꿈 기호로 입력되므로 rstrip() 메서드를 함께 사용

기본 출력: print() 함수 이용

실전에서 유용한 표준 라이브러리

내장 함수: 기본 입출력 함수부터 정렬 함수까지 기본적인 함수들을 제공

itertools: 파이썬에서 반복되는 형태의 데이터를 처리하기 위한 유용한 기능들을 제공

heapq: 힙 자료구조를 제공, 일반적으로 우선순위 큐 기능을 구현하기 위해 사용

bisect: 이진 탐색 기능을 제공

collections: 덱, 카운터 등의 유용한 자료구조를 포함

math: 필수적인 수학적 기능을 제공

