출처:https://minjoos.tistory.com/2

2차원 리스트 초기화
arr=[0,0,0,0,0]
arr=[0]*5
arr=[i for i in range(2,9) if i%2==0] #[2,4,6,8]

brr=[[1,2,3],[1,2,3],[1,2,3]]
brr=[[1,2,3]]*3
brr=[[1,2,3] for i in range(3)]
brr=[[i,j] for i in range(3) for j in range(2)] #[[0,0],[0,1],[1,0],[1,1],[2,0],[2,1]]

2차원 리스트 입력받기
n,m=map(int, input().split())

#1
mylist=[0 for _ in range(n)]

for i in range(n):
    mylist[i]=list(map(int, input().split()))


#2
mylist=[]
for i in range(n):
    mylist.append(list(map(int, input().split())))


#3
mylist=[list(map(int, input().split())) for _ in range(n)]

2차원 리스트에서 원하는 데이터의 위치 찾기

n,m=map(int, input().split())

#1 (for문을 이용해 일일이 비교하는 것) 
newlist=[]
mylist=[0 for _ in range(n)]
for i in range(n):
    mylist[i]=list(map(int, input().split()))
    for j in range(m):
        if mylist[i][j]==1:
            newlist.append([i,j])

#2 (리스트 컴프리헨션 이용)
mylist=[list(map(int, input().split())) for _ in range(n)]
newlist=[(i,j) for i in range(n) for j in range(m) if mylist[i][j]==1]

한 좌표의 상하좌우값 탐색

dx=[0,0,-1,1] #상하좌우
dy=[-1,1,0,0]
#델타 값을 이용하여 특정 원소의 상하좌우에 위치한 원소에 접근할 수 있음

for x in range(len(arr)):
    for y in range(len(arr[x])):
        for i in range(4):
            testX=x+dx[i]
            testY=y+dy[i]
            print(arr[testX][testY]

한 좌표에서 네 방향의 좌표와 x,y의 차이를 저장한 델타 값을 이용해 탐색

전치 행렬
arr=[[1,2,3],[4,5,6],[7,8,9]]

for i in range(3):
    for j in range(3):
        if i<j:
            arr[i][j], arr[j][i]==arr[j][i], arr[i][j]

2차원 행렬인 arr의 행(i) 열(j)의 좌표를 바꾸어 값을 교환